import { callOpenAIWithJSON } from "../utils/openai";
import { AgentThought, InterviewRound, InterviewQuestion, TalkingPoint } from "../../client/src/types";

/**
 * Interface for candidate talking points
 */
interface QuestionPoints {
  points: string[];
  relevance: string;
}

/**
 * Candidate Points Agent - Generates relevant talking points for interview questions
 * This agent uses candidate profile data from the profiler and highlighter agents
 * to identify relevant experiences and skills for each question
 */
export async function generateCandidatePoints(
  interviewRounds: InterviewRound[],
  candidateProfile: any,
  candidateHighlights: any,
  resumeText: string
) {
  const thoughts: AgentThought[] = [];
  
  thoughts.push({
    timestamp: Date.now(),
    agent: "Candidate Points Agent",
    thought: "Starting to generate relevant talking points based on candidate resume and strengths.",
    sourcesConsulted: []
  });
  
  try {
    const enhancedRounds: InterviewRound[] = [];
    
    // Process each round and generate points for each question
    for (const round of interviewRounds) {
      thoughts.push({
        timestamp: Date.now(),
        agent: "Candidate Points Agent",
        thought: `Identifying talking points for ${round.questions.length} questions in the ${round.name} round.`,
        sourcesConsulted: []
      });
      
      const enhancedQuestions: InterviewQuestion[] = [];
      
      for (const question of round.questions) {
        // Find relevant experience from candidate profile that relates to this question
        const relevantStrengths = candidateHighlights.relevantPoints || [];
        
        thoughts.push({
          timestamp: Date.now(),
          agent: "Candidate Points Agent",
          thought: `Analyzing question: "${question.question}" to identify relevant experiences from resume.`,
          sourcesConsulted: ["Resume", "Candidate Profile", "Candidate Highlights"]
        });
        
        // Generate talking points based on resume and highlights
        // Get the narrative guidance if available (generated by candidateNarrativeAgent)
        const narrativeGuidance = question.narrative || "";
        
        const pointsPrompt = `
          You are a resume analyst extracting SPECIFIC CONCRETE EXAMPLES from the candidate's resume that support the narrative guidance already provided.
          
          INTERVIEW QUESTION: "${question.question}"
          
          NARRATIVE GUIDANCE ALREADY PROVIDED (this is high-level strategy - you need to provide specific examples to support it):
          ${narrativeGuidance}
          
          RESUME TEXT:
          ${resumeText}
          
          YOUR TASK: Find 3-5 SPECIFIC EXAMPLES from the candidate's resume that provide CONCRETE EVIDENCE to support the narrative guidance above.
          
          The narrative guidance provides the strategy - you must provide the specific supporting evidence and examples from the resume.
          
          CRITICAL REQUIREMENTS:
          - Each talking point must be a SPECIFIC PROJECT or ACHIEVEMENT from the resume with precise details
          - Include exact metrics, dates, team sizes, and outcomes whenever available in the resume
          - Must directly relate to the interview question and support the narrative guidance
          - Must come directly from the resume text - never fabricate or embellish
          - Must include company names and timeframes where available
          
          FORMAT EACH POINT LIKE THIS:
          "At [Company] ([Years]): [Specific project] that [specific measurable outcome], using [specific methods/tools/approaches]"
          
          EXAMPLES OF GOOD TALKING POINTS:
          "At Amazon (2019-2021): Implemented an automated escalation framework that reduced critical issue resolution time by 89%, saving the company $2.4M annually in delayed resolution costs"
          
          "At Baxter (2016-2018): Led a team of 8 quality analysts in developing a real-time compliance dashboard tracking 230+ metrics across 5 manufacturing sites, improving audit readiness by 65%"
          
          Format your response as a JSON object with this structure:
          {
            "points": [
              "At [Company] ([Years]): [Specific achievement with metrics and outcomes]",
              "At [Company] ([Years]): [Specific project with team size and measurable impact]",
              "At [Company] ([Years]): [Specific contribution with quantifiable results]"
            ],
            "relevance": "Brief explanation of how these specific examples support the narrative guidance"
          }
          
          IMPORTANT: If the resume lacks sufficient specific details, avoid making up information. Instead, provide as much specific detail as possible from what's available, and indicate what additional information would strengthen the examples.
        `;
        
        // Get talking points from OpenAI
        const pointsResponse = await callOpenAIWithJSON<QuestionPoints>(pointsPrompt);
        
        // Create talking points array
        const enhancedTalkingPoints: TalkingPoint[] = [];
        
        // Add bullet points for each talking point
        if (pointsResponse.points && pointsResponse.points.length > 0) {
          pointsResponse.points.forEach((point, index) => {
            enhancedTalkingPoints.push({
              id: `${question.id}-point-${index}`,
              text: point // Clean text without bullets - CSS will handle formatting
            });
          });
          
          // Add relevance explanation as the last point with a special format
          if (pointsResponse.relevance) {
            enhancedTalkingPoints.push({
              id: `${question.id}-relevance`,
              text: pointsResponse.relevance
            });
          }
        } else {
          // Fallback if no points were generated
          enhancedTalkingPoints.push({
            id: `${question.id}-no-points`,
            text: `You should provide specific examples from your experience for this question.`
          });
        }
        
        thoughts.push({
          timestamp: Date.now(),
          agent: "Candidate Points Agent",
          thought: `Generated ${enhancedTalkingPoints.length} relevant talking points based on resume and candidate profile.`,
          sourcesConsulted: []
        });
        
        // Add the enhanced question with talking points
        enhancedQuestions.push({
          ...question,
          talkingPoints: enhancedTalkingPoints
        });
      }
      
      // Add the enhanced round with all its questions
      enhancedRounds.push({
        ...round,
        questions: enhancedQuestions
      });
    }
    
    thoughts.push({
      timestamp: Date.now(),
      agent: "Candidate Points Agent",
      thought: `Successfully generated relevant talking points for all interview questions across ${enhancedRounds.length} rounds.`,
      sourcesConsulted: []
    });
    
    return { rounds: enhancedRounds, thoughts };
  } catch (error: any) {
    console.error("Error in candidate points agent:", error);
    
    thoughts.push({
      timestamp: Date.now(),
      agent: "Candidate Points Agent",
      thought: `Error generating talking points: ${error.message}`,
      sourcesConsulted: []
    });
    
    throw new Error("Failed to generate candidate talking points: " + error.message);
  }
}